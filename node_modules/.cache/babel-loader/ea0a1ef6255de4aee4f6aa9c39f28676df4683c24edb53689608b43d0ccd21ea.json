{"ast":null,"code":"var _jsxFileName = \"/Users/sky/code/sei/projects/newPro/react-blog-new/client/src/pages/App/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Post from '../../components/Post/Post';\n// import Add from './components/Add'\n// import Edit from './components/Edit'\nimport PostForm from '../../components/PostForm';\nimport { Routes, Route } from 'react-router-dom';\nimport NavBar from '../../components/NavBar/NavBar';\nimport HomePage from '../HomePage/HomePage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [page, setPage] = useState(null);\n  const [userLoggedIn, setUserLoggedIn] = useState(false);\n  // const getPosts = () => {\n  //   axios.get('http://localhost:3000/posts')\n  //     .then((response) => setPosts(response.data), (err) => console.log(err))\n  //     .catch((error) => console.log(error))\n  // }\n\n  async function getPosts() {\n    try {\n      const res = await axios.get('http://localhost:3000/api/posts');\n      setPosts(res.data);\n      console.log(res.data);\n    } catch (err) {\n      console.error(err);\n    }\n  }\n  const handleCreate = createdPost => {\n    axios.post('http://localhost:3000/api/posts', createdPost).then(response => {\n      setPosts([...posts, response.data]);\n    });\n  };\n\n  // const handleEdit = (editedPerson) => {\n  //   axios.put('http://localhost:3000/people/' + editedPerson._id, editedPerson)\n  //     .then((response) => {\n  //       let newPost = post.map((person) => {\n  //         return person._id !== editedPerson._id ? person : editedPerson\n  //       })\n  //       setPost(newPost)\n  //     })\n  // }\n  // const handleDelete = (deletedPerson) => {\n  //   axios.delete('http://localhost:3000/people/' + deletedPerson._id)\n  //     .then((response) => {\n  //       let newPeople = people.filter((person) => {\n  //         return person._id !== deletedPerson._id\n  //       })\n  //       setPeople(newPeople)\n  //     })\n  // }\n\n  useEffect(() => {\n    checkUserAuthentication();\n    getPosts();\n  }, []);\n  function checkUserAuthentication() {\n    // Perform your logic to check if the user is authenticated or not\n    // For example, you might make an API call to the backend to check if the user has a valid session or token\n    // Set the 'userLoggedIn' state accordingly\n    // For demonstration purposes, we'll just set it to 'true'\n    setUserLoggedIn(true);\n  }\n  if (page === null || page === \"null\") {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(NavBar, {\n        setPage: setPage,\n        userLoggedIn: userLoggedIn\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(HomePage, {\n            setPage: setPage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n  if (page === \"index\") {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(NavBar, {\n        setPage: setPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"All Posts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Post, {\n            posts: posts\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n}\n_s(App, \"Fpsweop+J3zoEtKeFkEbQMDF0gw=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","axios","Post","PostForm","Routes","Route","NavBar","HomePage","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","posts","setPosts","page","setPage","userLoggedIn","setUserLoggedIn","getPosts","res","get","data","console","log","err","error","handleCreate","createdPost","post","then","response","checkUserAuthentication","children","fileName","_jsxFileName","lineNumber","columnNumber","path","element","_c","$RefreshReg$"],"sources":["/Users/sky/code/sei/projects/newPro/react-blog-new/client/src/pages/App/App.js"],"sourcesContent":["import { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport Post from '../../components/Post/Post'\n// import Add from './components/Add'\n// import Edit from './components/Edit'\nimport PostForm from '../../components/PostForm'\nimport { Routes, Route } from 'react-router-dom'\nimport NavBar from '../../components/NavBar/NavBar'\nimport HomePage from '../HomePage/HomePage'\n\n\n\n\nexport default function App() {\n  const [posts, setPosts] = useState([])\n\n  const [page, setPage] = useState(null)\n  const [userLoggedIn, setUserLoggedIn] = useState(false)\n  // const getPosts = () => {\n  //   axios.get('http://localhost:3000/posts')\n  //     .then((response) => setPosts(response.data), (err) => console.log(err))\n  //     .catch((error) => console.log(error))\n  // }\n\n  async function getPosts() {\n    try {\n      const res = await axios.get('http://localhost:3000/api/posts')\n      setPosts(res.data)\n      console.log(res.data)\n    } catch (err) {\n      console.error(err)\n    }\n  }\n\n  const handleCreate = (createdPost) => {\n    axios.post('http://localhost:3000/api/posts', createdPost)\n      .then((response) => {\n        setPosts([...posts, response.data])\n      })\n  }\n\n  // const handleEdit = (editedPerson) => {\n  //   axios.put('http://localhost:3000/people/' + editedPerson._id, editedPerson)\n  //     .then((response) => {\n  //       let newPost = post.map((person) => {\n  //         return person._id !== editedPerson._id ? person : editedPerson\n  //       })\n  //       setPost(newPost)\n  //     })\n  // }\n  // const handleDelete = (deletedPerson) => {\n  //   axios.delete('http://localhost:3000/people/' + deletedPerson._id)\n  //     .then((response) => {\n  //       let newPeople = people.filter((person) => {\n  //         return person._id !== deletedPerson._id\n  //       })\n  //       setPeople(newPeople)\n  //     })\n  // }\n\n\n  useEffect(() => {\n    checkUserAuthentication();\n    getPosts()\n  }, [])\n  function checkUserAuthentication() {\n    // Perform your logic to check if the user is authenticated or not\n    // For example, you might make an API call to the backend to check if the user has a valid session or token\n    // Set the 'userLoggedIn' state accordingly\n    // For demonstration purposes, we'll just set it to 'true'\n    setUserLoggedIn(true);\n  }\n\n\n  if (page === null || page === \"null\") {\n    return (\n      <>\n        <NavBar setPage={setPage} userLoggedIn={userLoggedIn} />\n\n        <Routes>\n          <Route\n            path=\"/\"\n            element={\n              <HomePage setPage={setPage} />\n            }>\n\n          </Route>\n\n\n        </Routes>\n      </>\n    )\n  }\n\n  if (page === \"index\") {\n    return (\n      <>\n        <NavBar setPage={setPage} />\n        <h1>All Posts</h1>\n        <Routes>\n          <Route\n            path=\"/\"\n            element={\n              <Post posts={posts} />\n            }>\n\n          </Route>\n        </Routes>\n      </>\n\n    )\n  }\n\n\n\n\n\n\n\n\n\n\n}\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,4BAA4B;AAC7C;AACA;AACA,OAAOC,QAAQ,MAAM,2BAA2B;AAChD,SAASC,MAAM,EAAEC,KAAK,QAAQ,kBAAkB;AAChD,OAAOC,MAAM,MAAM,gCAAgC;AACnD,OAAOC,QAAQ,MAAM,sBAAsB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAK3C,eAAe,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAC5B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAM,CAACiB,IAAI,EAAEC,OAAO,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACmB,YAAY,EAAEC,eAAe,CAAC,GAAGpB,QAAQ,CAAC,KAAK,CAAC;EACvD;EACA;EACA;EACA;EACA;;EAEA,eAAeqB,QAAQA,CAAA,EAAG;IACxB,IAAI;MACF,MAAMC,GAAG,GAAG,MAAMpB,KAAK,CAACqB,GAAG,CAAC,iCAAiC,CAAC;MAC9DP,QAAQ,CAACM,GAAG,CAACE,IAAI,CAAC;MAClBC,OAAO,CAACC,GAAG,CAACJ,GAAG,CAACE,IAAI,CAAC;IACvB,CAAC,CAAC,OAAOG,GAAG,EAAE;MACZF,OAAO,CAACG,KAAK,CAACD,GAAG,CAAC;IACpB;EACF;EAEA,MAAME,YAAY,GAAIC,WAAW,IAAK;IACpC5B,KAAK,CAAC6B,IAAI,CAAC,iCAAiC,EAAED,WAAW,CAAC,CACvDE,IAAI,CAAEC,QAAQ,IAAK;MAClBjB,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAEkB,QAAQ,CAACT,IAAI,CAAC,CAAC;IACrC,CAAC,CAAC;EACN,CAAC;;EAED;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAGAvB,SAAS,CAAC,MAAM;IACdiC,uBAAuB,CAAC,CAAC;IACzBb,QAAQ,CAAC,CAAC;EACZ,CAAC,EAAE,EAAE,CAAC;EACN,SAASa,uBAAuBA,CAAA,EAAG;IACjC;IACA;IACA;IACA;IACAd,eAAe,CAAC,IAAI,CAAC;EACvB;EAGA,IAAIH,IAAI,KAAK,IAAI,IAAIA,IAAI,KAAK,MAAM,EAAE;IACpC,oBACEP,OAAA,CAAAE,SAAA;MAAAuB,QAAA,gBACEzB,OAAA,CAACH,MAAM;QAACW,OAAO,EAAEA,OAAQ;QAACC,YAAY,EAAEA;MAAa;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAExD7B,OAAA,CAACL,MAAM;QAAA8B,QAAA,eACLzB,OAAA,CAACJ,KAAK;UACJkC,IAAI,EAAC,GAAG;UACRC,OAAO,eACL/B,OAAA,CAACF,QAAQ;YAACU,OAAO,EAAEA;UAAQ;YAAAkB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAC9B;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGF,CAAC;IAAA,eACT,CAAC;EAEP;EAEA,IAAItB,IAAI,KAAK,OAAO,EAAE;IACpB,oBACEP,OAAA,CAAAE,SAAA;MAAAuB,QAAA,gBACEzB,OAAA,CAACH,MAAM;QAACW,OAAO,EAAEA;MAAQ;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC5B7B,OAAA;QAAAyB,QAAA,EAAI;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAClB7B,OAAA,CAACL,MAAM;QAAA8B,QAAA,eACLzB,OAAA,CAACJ,KAAK;UACJkC,IAAI,EAAC,GAAG;UACRC,OAAO,eACL/B,OAAA,CAACP,IAAI;YAACY,KAAK,EAAEA;UAAM;YAAAqB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QACtB;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC;IAAA,eACT,CAAC;EAGP;AAWF;AAACzB,EAAA,CA7GuBD,GAAG;AAAA6B,EAAA,GAAH7B,GAAG;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}