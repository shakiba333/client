{"ast":null,"code":"var _jsxFileName = \"/Users/sky/code/sei/projects/newPro/react-blog-new/client/src/pages/App/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Post from '../../components/Post/Post';\n// import Add from './components/Add'\n// import Edit from './components/Edit'\nimport PostForm from '../../components/PostForm/PostForm';\nimport { Routes, Route } from 'react-router-dom';\nimport NavBar from '../../components/NavBar/NavBar';\nimport HomePage from '../HomePage/HomePage';\nimport PostDetail from '../../components/PostDetail/PostDetail';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [currentArticle, setCurrentArticle] = useState(null);\n  const [page, setPage] = useState(null);\n\n  // const getPosts = () => {\n  //   axios.get('http://localhost:3000/posts')\n  //     .then((response) => setPosts(response.data), (err) => console.log(err))\n  //     .catch((error) => console.log(error))\n  // }\n\n  async function getPosts() {\n    try {\n      const res = await axios.get('http://localhost:3000/api/posts');\n      setPosts(res.data);\n      console.log(res.data);\n    } catch (err) {\n      console.error(err);\n    }\n  }\n  const handleCreate = createdPost => {\n    axios.post('http://localhost:3000/api/posts', createdPost).then(response => {\n      setPosts([...posts, response.data]);\n    });\n  };\n  const handleEdit = editedPost => {\n    axios.put('http://localhost:3000/api/posts/' + editedPost._id, editedPost).then(response => {\n      let newPost = posts.map(post => {\n        return post._id !== editedPost._id ? post : editedPost;\n      });\n      setPosts(newPost);\n    });\n  };\n  const handleDelete = deletedPost => {\n    axios.delete('http://localhost:3000/api/posts/' + deletedPost).then(response => {\n      let newPosts = posts.filter(post => {\n        return post._id !== deletedPost;\n      });\n      setPosts(newPosts);\n    });\n  };\n  useEffect(() => {\n    getPosts();\n  }, []);\n  if (page === null || page === \"null\") {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(NavBar, {\n        setPage: setPage,\n        setCurrentArticle: setCurrentArticle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(HomePage, {\n            setPage: setPage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true);\n  }\n  if (page === \"index\" || page === \"indexUpdate\") {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(NavBar, {\n        setPage: setPage,\n        setCurrentArticle: setCurrentArticle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Post, {\n            posts: posts,\n            currentArticle: currentArticle,\n            setCurrentArticle: setCurrentArticle,\n            handleDelete: handleDelete,\n            handleEdit: handleEdit,\n            setPage: setPage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true);\n  }\n  if (page === \"postform\") {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(NavBar, {\n        setPage: setPage,\n        setCurrentArticle: setCurrentArticle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(PostForm, {\n            handleCreate: handleCreate,\n            setPage: setPage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true);\n  }\n\n  // if(page === \"detail\"){\n  //   return (\n  //       <>\n  //         <NavBar setPage={setPage}/>\n  //         {/* <h1>All Posts</h1> */}\n  //         <Routes>\n  //           <Route \n  //               path=\"/\" \n  //               element={\n  //                 <PostDetail id={id}/>\n  //               }>\n\n  //           </Route>\n  //         </Routes>\n  //       </>\n\n  //   )\n  // }\n}\n_s(App, \"NeDYVNvkR23Vzi/9dtY0XexcI4M=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","axios","Post","PostForm","Routes","Route","NavBar","HomePage","PostDetail","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","posts","setPosts","currentArticle","setCurrentArticle","page","setPage","getPosts","res","get","data","console","log","err","error","handleCreate","createdPost","post","then","response","handleEdit","editedPost","put","_id","newPost","map","handleDelete","deletedPost","delete","newPosts","filter","children","fileName","_jsxFileName","lineNumber","columnNumber","path","element","_c","$RefreshReg$"],"sources":["/Users/sky/code/sei/projects/newPro/react-blog-new/client/src/pages/App/App.js"],"sourcesContent":["import { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport Post from '../../components/Post/Post'\n// import Add from './components/Add'\n// import Edit from './components/Edit'\nimport PostForm from '../../components/PostForm/PostForm'\nimport { Routes, Route } from 'react-router-dom'\nimport NavBar from '../../components/NavBar/NavBar'\nimport HomePage from '../HomePage/HomePage'\nimport PostDetail from '../../components/PostDetail/PostDetail'\n\n\n\n\nexport default function App() {\n  const [posts, setPosts] = useState([])\n  const [currentArticle, setCurrentArticle] = useState(null)\n  const [page, setPage] = useState(null)\n\n  // const getPosts = () => {\n  //   axios.get('http://localhost:3000/posts')\n  //     .then((response) => setPosts(response.data), (err) => console.log(err))\n  //     .catch((error) => console.log(error))\n  // }\n\n  async function getPosts(){\n    try {\n      const res = await axios.get('http://localhost:3000/api/posts')\n      setPosts(res.data)\n      console.log(res.data)\n    } catch (err){\n      console.error(err)\n    }\n  }\n\n\n  const handleCreate = (createdPost) => {\n    axios.post('http://localhost:3000/api/posts', createdPost)\n      .then((response) => {\n        setPosts([...posts, response.data])\n      })\n  }\n\n\n  const handleEdit = (editedPost) => {\n    axios.put('http://localhost:3000/api/posts/' + editedPost._id, editedPost)\n      .then((response) => {\n        let newPost = posts.map((post) => {\n          return post._id !== editedPost._id ? post : editedPost\n        })\n        setPosts(newPost)\n      })\n  }\n\n  const handleDelete = (deletedPost) => {\n    axios.delete('http://localhost:3000/api/posts/' + deletedPost)\n      .then((response) => {\n        let newPosts = posts.filter((post) => {\n          return post._id !== deletedPost\n        })\n        setPosts(newPosts)\n      })\n  }\n\n\n  useEffect(() => {\n    getPosts()\n  }, [])\n\n\n \n      if(page === null || page === \"null\"){\n        return (\n          <>\n          <NavBar setPage={setPage} setCurrentArticle={setCurrentArticle}/>\n         \n              <Routes>\n                <Route \n                    path=\"/\" \n                    element={\n                      <HomePage setPage={setPage}/>\n                    }>\n\n                </Route>\n              </Routes>\n          </>\n        )\n      }\n\n      if(page === \"index\" || page === \"indexUpdate\"){\n        return (\n            <>\n              <NavBar setPage={setPage} setCurrentArticle={setCurrentArticle}/>\n              {/* <h1>All Posts</h1> */}\n              <Routes>\n                <Route \n                    path=\"/\" \n                    element={\n                      <Post \n                      posts={posts} \n                      currentArticle={currentArticle} \n                      setCurrentArticle={setCurrentArticle} \n                      handleDelete={handleDelete}\n                      handleEdit={handleEdit}\n                      setPage={setPage}\n                      />\n                    }>\n\n                </Route>\n              </Routes>\n            </>\n\n        )\n      }\n\n      if(page === \"postform\"){\n        return (\n            <>\n              <NavBar setPage={setPage} setCurrentArticle={setCurrentArticle}/>\n              {/* <h1>All Posts</h1> */}\n              <Routes>\n                <Route \n                    path=\"/\" \n                    element={\n                      <PostForm handleCreate={handleCreate} setPage={setPage}/>\n                    }>\n\n                </Route>\n              </Routes>\n            </>\n\n        )\n      }\n\n      // if(page === \"detail\"){\n      //   return (\n      //       <>\n      //         <NavBar setPage={setPage}/>\n      //         {/* <h1>All Posts</h1> */}\n      //         <Routes>\n      //           <Route \n      //               path=\"/\" \n      //               element={\n      //                 <PostDetail id={id}/>\n      //               }>\n\n      //           </Route>\n      //         </Routes>\n      //       </>\n\n      //   )\n      // }\n    \n      \n\n         \n         \n\n\n      \n      \n\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}