{"ast":null,"code":"var _jsxFileName = \"/Users/sky/code/sei/projects/newPro/react-blog-new/client/src/pages/Login/Login.jsx\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport dotenv from \"dotenv\";\nimport GoogleLogin from \"react-google-login\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ndotenv.config();\nconst baseURL = process.env.REACT_APP_BASEURL || \"http://localhost:3000\";\nclass Login extends React.Component {\n  //After logging in, redirect to previous page\n  componentDidMount() {\n    if (sessionStorage.getItem(\"isLoggedIn\") === \"true\") {\n      window.history.back();\n    }\n  }\n\n  // Google login success callback\n  successGoogleLogin(response) {\n    // Create an instance of the user\n    const user = {\n      name: response.profileObj.name,\n      googleId: response.googleId,\n      email: response.email,\n      avatar: response.avatar\n    };\n\n    // Make an API call to either findOrCreate the user\n    axios.post(`${baseURL}/auth/login`, user).then(res => {\n      // Reload the page once count is 1 to reload the navbar component and display \"Logout\" as an option instead of \"Login\"\n      let count = 0;\n\n      // If the response has a valid social Id\n      if (res.data.googleId === response.googleId) {\n        // Set the username and isLoggedIn in the session storage\n        sessionStorage.setItem(\"isLoggedIn\", \"true\");\n        sessionStorage.setItem(\"name\", res.data.name);\n        count++;\n\n        // Remove the user session cookie after 24 hours, to log the user out.\n        // This is for cases when the user doesn't end the session or doesn't logout\n        window.setTimeout(() => {\n          sessionStorage.removeItem(\"isLoggedIn\");\n          sessionStorage.removeItem(\"name\");\n        }, 24 * 60 * 60 * 60);\n\n        // If user data is stored in the session Storage, then reload page to update Navbar component appropriately\n        if (count === 1) {\n          window.location.reload();\n        }\n      }\n      // If user data returned is invalid, then redirect to the login page once again\n      else {\n        window.location = \"/login\";\n      }\n    }).catch(err => console.error(err));\n  }\n\n  // Google login failure callback\n  failureGoogleLogin(response) {\n    console.error(response);\n    window.location = \"/login\";\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(GoogleLogin, {\n        clientId: process.env.REACT_APP_GOOGLE_CLIENT_ID,\n        buttonText: \"Log in With Google\",\n        onSuccess: this.successGoogleLogin,\n        onFailure: this.failureGoogleLogin,\n        cookiePolicy: \"single_host_origin\",\n        scope: \"profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default Login;","map":{"version":3,"names":["React","axios","dotenv","GoogleLogin","jsxDEV","_jsxDEV","config","baseURL","process","env","REACT_APP_BASEURL","Login","Component","componentDidMount","sessionStorage","getItem","window","history","back","successGoogleLogin","response","user","name","profileObj","googleId","email","avatar","post","then","res","count","data","setItem","setTimeout","removeItem","location","reload","catch","err","console","error","failureGoogleLogin","render","children","clientId","REACT_APP_GOOGLE_CLIENT_ID","buttonText","onSuccess","onFailure","cookiePolicy","scope","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/sky/code/sei/projects/newPro/react-blog-new/client/src/pages/Login/Login.jsx"],"sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport dotenv from \"dotenv\";\n\nimport GoogleLogin from \"react-google-login\";\n\ndotenv.config();\nconst baseURL = process.env.REACT_APP_BASEURL || \"http://localhost:3000\";\n\nclass Login extends React.Component {\n  //After logging in, redirect to previous page\n  componentDidMount() {\n    if (sessionStorage.getItem(\"isLoggedIn\") === \"true\") {\n      window.history.back();\n    }\n  }\n\n  // Google login success callback\n  successGoogleLogin(response) {\n    // Create an instance of the user\n    const user = {\n      name: response.profileObj.name,\n      googleId: response.googleId,\n      email: response.email,\n      avatar: response.avatar,\n    };\n\n    // Make an API call to either findOrCreate the user\n    axios\n      .post(`${baseURL}/auth/login`, user)\n      .then((res) => {\n        // Reload the page once count is 1 to reload the navbar component and display \"Logout\" as an option instead of \"Login\"\n        let count = 0;\n\n        // If the response has a valid social Id\n        if (res.data.googleId === response.googleId) {\n          // Set the username and isLoggedIn in the session storage\n          sessionStorage.setItem(\"isLoggedIn\", \"true\");\n          sessionStorage.setItem(\"name\", res.data.name);\n          count++;\n\n          // Remove the user session cookie after 24 hours, to log the user out.\n          // This is for cases when the user doesn't end the session or doesn't logout\n          window.setTimeout(() => {\n            sessionStorage.removeItem(\"isLoggedIn\");\n            sessionStorage.removeItem(\"name\");\n          }, 24 * 60 * 60 * 60);\n\n          // If user data is stored in the session Storage, then reload page to update Navbar component appropriately\n          if (count === 1) {\n            window.location.reload();\n          }\n        }\n        // If user data returned is invalid, then redirect to the login page once again\n        else {\n          window.location = \"/login\";\n        }\n      })\n      .catch((err) => console.error(err));\n  }\n\n  // Google login failure callback\n  failureGoogleLogin(response) {\n    console.error(response);\n    window.location = \"/login\";\n  }\n\n  render() {\n    return (\n      <div>\n        <GoogleLogin\n          clientId={process.env.REACT_APP_GOOGLE_CLIENT_ID}\n          buttonText=\"Log in With Google\"\n          onSuccess={this.successGoogleLogin}\n          onFailure={this.failureGoogleLogin}\n          cookiePolicy={\"single_host_origin\"}\n          scope=\"profile\"\n        />\n      </div>\n    );\n  }\n}\n\nexport default Login;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,QAAQ;AAE3B,OAAOC,WAAW,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7CH,MAAM,CAACI,MAAM,CAAC,CAAC;AACf,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,uBAAuB;AAExE,MAAMC,KAAK,SAASX,KAAK,CAACY,SAAS,CAAC;EAClC;EACAC,iBAAiBA,CAAA,EAAG;IAClB,IAAIC,cAAc,CAACC,OAAO,CAAC,YAAY,CAAC,KAAK,MAAM,EAAE;MACnDC,MAAM,CAACC,OAAO,CAACC,IAAI,CAAC,CAAC;IACvB;EACF;;EAEA;EACAC,kBAAkBA,CAACC,QAAQ,EAAE;IAC3B;IACA,MAAMC,IAAI,GAAG;MACXC,IAAI,EAAEF,QAAQ,CAACG,UAAU,CAACD,IAAI;MAC9BE,QAAQ,EAAEJ,QAAQ,CAACI,QAAQ;MAC3BC,KAAK,EAAEL,QAAQ,CAACK,KAAK;MACrBC,MAAM,EAAEN,QAAQ,CAACM;IACnB,CAAC;;IAED;IACAzB,KAAK,CACF0B,IAAI,CAAE,GAAEpB,OAAQ,aAAY,EAAEc,IAAI,CAAC,CACnCO,IAAI,CAAEC,GAAG,IAAK;MACb;MACA,IAAIC,KAAK,GAAG,CAAC;;MAEb;MACA,IAAID,GAAG,CAACE,IAAI,CAACP,QAAQ,KAAKJ,QAAQ,CAACI,QAAQ,EAAE;QAC3C;QACAV,cAAc,CAACkB,OAAO,CAAC,YAAY,EAAE,MAAM,CAAC;QAC5ClB,cAAc,CAACkB,OAAO,CAAC,MAAM,EAAEH,GAAG,CAACE,IAAI,CAACT,IAAI,CAAC;QAC7CQ,KAAK,EAAE;;QAEP;QACA;QACAd,MAAM,CAACiB,UAAU,CAAC,MAAM;UACtBnB,cAAc,CAACoB,UAAU,CAAC,YAAY,CAAC;UACvCpB,cAAc,CAACoB,UAAU,CAAC,MAAM,CAAC;QACnC,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;;QAErB;QACA,IAAIJ,KAAK,KAAK,CAAC,EAAE;UACfd,MAAM,CAACmB,QAAQ,CAACC,MAAM,CAAC,CAAC;QAC1B;MACF;MACA;MAAA,KACK;QACHpB,MAAM,CAACmB,QAAQ,GAAG,QAAQ;MAC5B;IACF,CAAC,CAAC,CACDE,KAAK,CAAEC,GAAG,IAAKC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC,CAAC;EACvC;;EAEA;EACAG,kBAAkBA,CAACrB,QAAQ,EAAE;IAC3BmB,OAAO,CAACC,KAAK,CAACpB,QAAQ,CAAC;IACvBJ,MAAM,CAACmB,QAAQ,GAAG,QAAQ;EAC5B;EAEAO,MAAMA,CAAA,EAAG;IACP,oBACErC,OAAA;MAAAsC,QAAA,eACEtC,OAAA,CAACF,WAAW;QACVyC,QAAQ,EAAEpC,OAAO,CAACC,GAAG,CAACoC,0BAA2B;QACjDC,UAAU,EAAC,oBAAoB;QAC/BC,SAAS,EAAE,IAAI,CAAC5B,kBAAmB;QACnC6B,SAAS,EAAE,IAAI,CAACP,kBAAmB;QACnCQ,YAAY,EAAE,oBAAqB;QACnCC,KAAK,EAAC;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAEV;AACF;AAEA,eAAe3C,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}